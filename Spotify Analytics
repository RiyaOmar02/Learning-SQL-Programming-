# For this project, I downloaded Spotify data from Kaggle. Then I created a table to insert Spotify data into. Finally, I performed analytics on the data using SQL. 

# I created the table for the data to import into: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# Then I imported the Spotify Data .csv into the table.

# Next, I explored the data using the following SQL. 


# First, I looked at the top ten most popular songs and the artist for those songs. 

SELECT popularity, track_name, artist_name  
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10
;


# Then, I determined who the most popular artist was based on average song popularity. 

SELECT artist_name, AVG(popularity)
FROM spotifydata
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 1
;


# I also determined the length of each song by minutes rather than milliseconds. 

SELECT track_name, artist_name, ROUND(duration_ms / 1000 / 60) AS 'apprx_length(min)'
FROM spotifydata
ORDER BY duration_ms desc

# After exploring, I answered questions posed by others regarding the data. 

# Q1 
